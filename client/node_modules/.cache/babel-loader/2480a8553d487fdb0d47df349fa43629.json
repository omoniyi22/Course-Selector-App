{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Seun\\\\Desktop\\\\Apollo_Man\\\\MyCourse\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{graphql}from'react-apollo';import{flowRight as compose}from'lodash';import{getColleges,addCourse,getCourseQuery}from'./queries/queries';var AddCourse=/*#__PURE__*/function(_Component){_inherits(AddCourse,_Component);var _super=_createSuper(AddCourse);function AddCourse(props){var _this;_classCallCheck(this,AddCourse);_this=_super.call(this,props);_this.state={course_name:\"\",duration:\"\",college_id:\"\"};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(AddCourse,[{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();this.props.addCourse({variables:{name:this.state.course_name,duration:this.state.duration,collegeId:this.state.college_id},refetchQueries:[{query:getCourseQuery}]});}},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,\"\".concat([e.target.value])));}},{key:\"displayCollege\",value:function displayCollege(){var data=this.props.getColleges;if(data.loading){return/*#__PURE__*/React.createElement(\"option\",null,\"loading colleges..\");}else if(data.colleges){return data.colleges.map(function(college){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"option\",{key:college.id,value:college.id},college.name));});}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit,className:\" col-md-6 col-sm-12 \"},/*#__PURE__*/React.createElement(\"div\",{className:\"form md-form\"},/*#__PURE__*/React.createElement(\"label\",null,\"Course Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control px-0\",onChange:this.onChange// value={this.state.course_name}\n,name:\"course_name\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"md-form\"},/*#__PURE__*/React.createElement(\"label\",null,\"Duration\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control px-0\",onChange:this.onChange,value:this.state.duration,name:\"duration\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"select\",{className:\"form-control px-0\",name:\"college_id\",value:this.state.college_id,onChange:this.onChange},/*#__PURE__*/React.createElement(\"option\",null,\"Select Your College\"),this.displayCollege())),/*#__PURE__*/React.createElement(\"button\",{className:\"btn rounded-pill p-2 border z-depth-0\"},\"Add\",/*#__PURE__*/React.createElement(\"span\",{className:\"ml-1 fa fa-plus\"})));}}]);return AddCourse;}(Component);export default compose(graphql(getColleges,{name:\"getColleges\"}),graphql(addCourse,{name:\"addCourse\"}))(AddCourse);","map":{"version":3,"sources":["C:/Users/Seun/Desktop/Apollo_Man/MyCourse/client/src/AddCourse.js"],"names":["React","Component","graphql","flowRight","compose","getColleges","addCourse","getCourseQuery","AddCourse","props","state","course_name","duration","college_id","onChange","bind","onSubmit","e","preventDefault","variables","name","collegeId","refetchQueries","query","setState","target","value","data","loading","colleges","map","college","id","displayCollege"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { graphql } from 'react-apollo'\r\nimport { flowRight as compose } from 'lodash'\r\nimport { getColleges, addCourse, getCourseQuery } from './queries/queries'\r\n\r\n\r\n\r\nclass AddCourse extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            course_name: \"\",\r\n            duration: \"\",\r\n            college_id: \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.addCourse({\r\n            variables: {\r\n                name: this.state.course_name,\r\n                duration: this.state.duration,\r\n                collegeId: this.state.college_id\r\n            },\r\n            refetchQueries: [{ query: getCourseQuery }]\r\n        })\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: `${[e.target.value]}`,\r\n        })\r\n    }\r\n\r\n    displayCollege() {\r\n        let data = this.props.getColleges\r\n        if (data.loading) {\r\n            return (\r\n                <option>loading colleges..</option>\r\n            )\r\n        } else if (data.colleges) {\r\n            return data.colleges.map(college =>\r\n                <>\r\n                    <option key={college.id} value={college.id}>{college.name}</option>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} className=\" col-md-6 col-sm-12 \" >\r\n                <div className=\"form md-form\">\r\n                    <label>Course Name</label>\r\n                    <input type='text'\r\n                        className=\"form-control px-0\"\r\n                        onChange={this.onChange}\r\n                        // value={this.state.course_name}\r\n                        name='course_name'\r\n                    />\r\n                </div>\r\n                <div className=\"md-form\">\r\n                    <label>Duration</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control px-0\"\r\n                        onChange={this.onChange}\r\n                        value={this.state.duration}\r\n                        name='duration'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <select className=\"form-control px-0\"\r\n                        name=\"college_id\"\r\n                        value={this.state.college_id}\r\n                        onChange={this.onChange}\r\n                    >\r\n                        <option>Select Your College</option>\r\n                        {this.displayCollege()}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn rounded-pill p-2 border z-depth-0\">Add<span className=\"ml-1 fa fa-plus\" /></button> \r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(getColleges, { name: \"getColleges\" }),\r\n    graphql(addCourse, { name: \"addCourse\" })\r\n)(AddCourse)\r\n\r\n"]},"metadata":{},"sourceType":"module"}